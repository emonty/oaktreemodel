// Code generated by protoc-gen-go.
// source: security_group.proto
// DO NOT EDIT!

/*
Package oaktree is a generated protocol buffer package.

It is generated from these files:
	security_group.proto

It has these top-level messages:
	SecurityGroupRule
	SecurityGroupRuleList
	SecurityGroup
	SecurityGroupList
*/
package oaktree

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import oaktree1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SecurityGroupRule_Direction int32

const (
	SecurityGroupRule_ingress SecurityGroupRule_Direction = 0
	SecurityGroupRule_egress  SecurityGroupRule_Direction = 1
)

var SecurityGroupRule_Direction_name = map[int32]string{
	0: "ingress",
	1: "egress",
}
var SecurityGroupRule_Direction_value = map[string]int32{
	"ingress": 0,
	"egress":  1,
}

func (x SecurityGroupRule_Direction) String() string {
	return proto.EnumName(SecurityGroupRule_Direction_name, int32(x))
}
func (SecurityGroupRule_Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type SecurityGroupRule struct {
	Location        *oaktree1.Location          `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Id              string                      `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Direction       SecurityGroupRule_Direction `protobuf:"varint,3,opt,name=direction,enum=oaktree.SecurityGroupRule_Direction" json:"direction,omitempty"`
	Ethertype       string                      `protobuf:"bytes,4,opt,name=ethertype" json:"ethertype,omitempty"`
	PortRangeMin    uint32                      `protobuf:"varint,5,opt,name=port_range_min,json=portRangeMin" json:"port_range_min,omitempty"`
	PortRangeMax    uint32                      `protobuf:"varint,6,opt,name=port_range_max,json=portRangeMax" json:"port_range_max,omitempty"`
	Protocol        string                      `protobuf:"bytes,7,opt,name=protocol" json:"protocol,omitempty"`
	RemoteIpPrefix  string                      `protobuf:"bytes,8,opt,name=remote_ip_prefix,json=remoteIpPrefix" json:"remote_ip_prefix,omitempty"`
	SecurityGroupId string                      `protobuf:"bytes,9,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	RemoteGroupId   string                      `protobuf:"bytes,10,opt,name=remote_group_id,json=remoteGroupId" json:"remote_group_id,omitempty"`
	Properties      map[string]string           `protobuf:"bytes,99,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityGroupRule) Reset()                    { *m = SecurityGroupRule{} }
func (m *SecurityGroupRule) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroupRule) ProtoMessage()               {}
func (*SecurityGroupRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SecurityGroupRule) GetLocation() *oaktree1.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *SecurityGroupRule) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

type SecurityGroupRuleList struct {
	Rules []*SecurityGroupRule `protobuf:"bytes,1,rep,name=rules" json:"rules,omitempty"`
}

func (m *SecurityGroupRuleList) Reset()                    { *m = SecurityGroupRuleList{} }
func (m *SecurityGroupRuleList) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroupRuleList) ProtoMessage()               {}
func (*SecurityGroupRuleList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SecurityGroupRuleList) GetRules() []*SecurityGroupRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type SecurityGroup struct {
	Location    *oaktree1.Location   `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Id          string               `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name        string               `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description string               `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Rules       []*SecurityGroupRule `protobuf:"bytes,5,rep,name=rules" json:"rules,omitempty"`
	Properties  map[string]string    `protobuf:"bytes,99,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SecurityGroup) Reset()                    { *m = SecurityGroup{} }
func (m *SecurityGroup) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroup) ProtoMessage()               {}
func (*SecurityGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SecurityGroup) GetLocation() *oaktree1.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *SecurityGroup) GetRules() []*SecurityGroupRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *SecurityGroup) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

type SecurityGroupList struct {
	SecurityGroups []*SecurityGroup `protobuf:"bytes,1,rep,name=security_groups,json=securityGroups" json:"security_groups,omitempty"`
}

func (m *SecurityGroupList) Reset()                    { *m = SecurityGroupList{} }
func (m *SecurityGroupList) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroupList) ProtoMessage()               {}
func (*SecurityGroupList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SecurityGroupList) GetSecurityGroups() []*SecurityGroup {
	if m != nil {
		return m.SecurityGroups
	}
	return nil
}

func init() {
	proto.RegisterType((*SecurityGroupRule)(nil), "oaktree.SecurityGroupRule")
	proto.RegisterType((*SecurityGroupRuleList)(nil), "oaktree.SecurityGroupRuleList")
	proto.RegisterType((*SecurityGroup)(nil), "oaktree.SecurityGroup")
	proto.RegisterType((*SecurityGroupList)(nil), "oaktree.SecurityGroupList")
	proto.RegisterEnum("oaktree.SecurityGroupRule_Direction", SecurityGroupRule_Direction_name, SecurityGroupRule_Direction_value)
}

func init() { proto.RegisterFile("security_group.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x93, 0x6d, 0x8b, 0xd3, 0x40,
	0x10, 0xc7, 0xed, 0x73, 0x33, 0xbd, 0xa6, 0xed, 0x70, 0x4a, 0x28, 0xbe, 0x28, 0xa5, 0x1c, 0xc7,
	0x81, 0x45, 0xce, 0x37, 0x22, 0x88, 0x20, 0x3e, 0x50, 0x39, 0xe1, 0x58, 0x7d, 0x1f, 0x62, 0x3a,
	0xd6, 0xe5, 0x9a, 0xec, 0xb2, 0xbb, 0x95, 0xf6, 0xc3, 0xf9, 0x09, 0xfc, 0x52, 0x6e, 0x36, 0x69,
	0xfa, 0x70, 0x77, 0x22, 0xc8, 0xbd, 0x9b, 0xfc, 0xf7, 0x37, 0xbb, 0x33, 0xf3, 0x9f, 0xc0, 0xa9,
	0xa6, 0x78, 0xa5, 0xb8, 0xd9, 0x84, 0x0b, 0x25, 0x56, 0x72, 0x2a, 0x95, 0x30, 0x02, 0x5b, 0x22,
	0xba, 0x31, 0x8a, 0x68, 0x78, 0x12, 0x8b, 0x24, 0x11, 0x69, 0x2e, 0x8f, 0x7f, 0xd7, 0x61, 0xf0,
	0xa5, 0xe0, 0x3f, 0x66, 0x38, 0x5b, 0x2d, 0x09, 0x9f, 0x41, 0x7b, 0x29, 0xe2, 0xc8, 0x70, 0x91,
	0x06, 0x95, 0x51, 0xe5, 0xbc, 0x73, 0x39, 0x98, 0x16, 0xf9, 0xd3, 0xab, 0xe2, 0x80, 0x95, 0x08,
	0xfa, 0x50, 0xe5, 0xf3, 0xa0, 0x6a, 0x41, 0x8f, 0xd9, 0x08, 0xdf, 0x82, 0x37, 0xe7, 0x8a, 0x62,
	0x97, 0x5f, 0xb3, 0xb2, 0x7f, 0x39, 0x29, 0xf3, 0x6f, 0xbd, 0x36, 0x7d, 0xb7, 0x65, 0xd9, 0x2e,
	0x0d, 0x9f, 0x82, 0x47, 0xe6, 0x07, 0x29, 0xb3, 0x91, 0x14, 0xd4, 0xdd, 0xd5, 0x3b, 0x01, 0x27,
	0xe0, 0x4b, 0xa1, 0x4c, 0xa8, 0xa2, 0x74, 0x41, 0x61, 0xc2, 0xd3, 0xa0, 0x61, 0x91, 0x2e, 0x3b,
	0xc9, 0x54, 0x96, 0x89, 0x9f, 0x79, 0x7a, 0x4c, 0x45, 0xeb, 0xa0, 0x79, 0x4c, 0x45, 0x6b, 0x1c,
	0x42, 0xdb, 0xcd, 0x22, 0x16, 0xcb, 0xa0, 0xe5, 0x1e, 0x2a, 0xbf, 0xf1, 0x1c, 0xfa, 0x8a, 0x12,
	0x61, 0x28, 0xe4, 0x32, 0x94, 0x8a, 0xbe, 0xf3, 0x75, 0xd0, 0x76, 0x8c, 0x9f, 0xeb, 0x33, 0x79,
	0xed, 0x54, 0xbc, 0x80, 0xc1, 0xe1, 0xdc, 0x43, 0x3b, 0x12, 0xcf, 0xa1, 0x3d, 0xbd, 0xdf, 0xf2,
	0x6c, 0x8e, 0x67, 0xd0, 0x2b, 0x6e, 0x2d, 0x49, 0x70, 0x64, 0x37, 0x97, 0xb7, 0xdc, 0x27, 0x00,
	0x5b, 0x89, 0xb4, 0x3d, 0x73, 0xd2, 0x41, 0x3c, 0xaa, 0x59, 0x23, 0x2e, 0xfe, 0x32, 0xc8, 0xeb,
	0x12, 0x7e, 0x9f, 0x1a, 0xb5, 0x61, 0x7b, 0xd9, 0xc3, 0xd7, 0xd0, 0x3b, 0x3a, 0xc6, 0x3e, 0xd4,
	0x6e, 0x68, 0xe3, 0x0c, 0xf6, 0x58, 0x16, 0xe2, 0x29, 0x34, 0x7e, 0x46, 0xcb, 0x15, 0x15, 0x5e,
	0xe6, 0x1f, 0xaf, 0xaa, 0x2f, 0x2b, 0xe3, 0x09, 0x78, 0xa5, 0x4d, 0xd8, 0x81, 0x16, 0x4f, 0x17,
	0x8a, 0xb4, 0xee, 0x3f, 0x42, 0x80, 0x26, 0xe5, 0x71, 0x65, 0x3c, 0x83, 0xc7, 0xb7, 0xaa, 0xba,
	0xe2, 0xda, 0xe0, 0x73, 0x68, 0x28, 0x1b, 0x6b, 0xfb, 0x58, 0xd6, 0xc4, 0xf0, 0xfe, 0x26, 0x58,
	0x0e, 0x8e, 0x7f, 0x55, 0xa1, 0x7b, 0x70, 0xf8, 0xbf, 0x4b, 0x89, 0x50, 0x4f, 0xa3, 0x84, 0xdc,
	0x3e, 0x7a, 0xcc, 0xc5, 0x38, 0x82, 0xce, 0x9c, 0x74, 0xac, 0xb8, 0x74, 0xb7, 0xe6, 0x6b, 0xb6,
	0x2f, 0xed, 0x0a, 0x6f, 0xfc, 0x63, 0xe1, 0xf8, 0xe1, 0x0e, 0xd3, 0xce, 0xee, 0x4e, 0x7b, 0x48,
	0xc3, 0xbe, 0x1e, 0xfd, 0xd7, 0xce, 0x86, 0x37, 0xd0, 0x3b, 0x5c, 0xd2, 0xad, 0x21, 0x4f, 0xee,
	0xe9, 0xcb, 0x3f, 0x58, 0x5d, 0xfd, 0xad, 0xe9, 0xfe, 0x8c, 0x17, 0x7f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x3e, 0xd8, 0xb9, 0x74, 0x64, 0x04, 0x00, 0x00,
}
